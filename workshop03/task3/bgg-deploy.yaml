# BGGDB
---
apiVersion: v1
kind: Namespace
metadata:
  name: bggns2
  labels:
    name: bggns2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bggdb-deploy
  labels:
    name: bggdb-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      name: bggdb-pod
  template:
    metadata:
      name: bggdb-pod
      labels:
        name: bggdb-pod
        dept: eng
        purpose: database
      namespace: bggns2
    spec:
      volumes:
        - name: bggdb-vol
          persistentVolumeClaim:
            claimName: data-pvc
      containers:
        - name: bggdb-pod
          image: stackupiss/bgg-database:v1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: bggdb-vol
              mountPath: /var/lib/mysql
---
apiVersion: v1
kind: Service
metadata:
  name: bggdb-svc
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3306
      targetPort: 3306
  selector:
    name: bggdb-pod
...
#
# BGGAPP#
#
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bggapp-cm
  labels:
    name: bggapp-cm
data:
  BGG_DB_USER: root
  BGG_DB_HOST: bggdb-svc.bggns2.svc.cluster.local
---
apiVersion: v1
kind: Secret
metadata:
  name: bggapp-secret
data:
  BGG_DB_PASSWORD: Y2hhbmdlaXQ=
---
# POD V1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bggapp-deploy1
  labels:
    name: bggapp-deploy1
spec:
  replicas: 3
  selector:
    matchLabels:
      name: bggapp-pod1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: bggapp-pod1
      labels:
        name: bggapp-pod1
        dept: eng
        purpose: application
      namespace: bggns2
    spec:
      containers:
        - name: bggapp-pod1
          image: stackupiss/bgg-backend:v1
          imagePullPolicy: IfNotPresent
          args: 
            - --prefix
            - /v1
          env:
            - name: BGG_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: bggapp-cm
                  key: BGG_DB_USER
            - name: BGG_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: bggapp-cm
                  key: BGG_DB_HOST
            - name: BGG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bggapp-secret
                  key: BGG_DB_PASSWORD
          ports:
            - name: app-port
              containerPort: 3000
          # livenessProbe:
          #   httpGet:
          #     path: /v1/healthz
          #     port: app-port
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          #   successThreshold: 1
          # readinessProbe:
          #   httpGet:
          #     path: /v1/healthz
          #     port: app-port
          #   timeoutSeconds: 5
          #   failureThreshold: 3
---
# POD V2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bggapp-deploy2
  labels:
    name: bggapp-deploy2
spec:
  replicas: 3
  selector:
    matchLabels:
      name: bggapp-pod2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: bggapp-pod2
      labels:
        name: bggapp-pod2
        dept: eng
        purpose: application
      namespace: bggns2
    spec:
      containers:
        - name: bggapp-pod2
          image: stackupiss/bgg-backend:v2
          imagePullPolicy: IfNotPresent
          args: 
            - --prefix
            - /v2
          env:
            - name: BGG_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: bggapp-cm
                  key: BGG_DB_USER
            - name: BGG_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: bggapp-cm
                  key: BGG_DB_HOST
            - name: BGG_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bggapp-secret
                  key: BGG_DB_PASSWORD
          ports:
            - name: app-port
              containerPort: 3000
          # livenessProbe:
          #   httpGet:
          #     path: /v2/healthz
          #     port: app-port
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          #   successThreshold: 1
          # readinessProbe:
          #   httpGet:
          #     path: /v2/healthz
          #     port: app-port
          #   timeoutSeconds: 5
          #   failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: bggapp-svc1
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: app-port
  selector:
    name: bggapp-pod1
---
apiVersion: v1
kind: Service
metadata:
  name: bggapp-svc2
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: app-port
  selector:
    name: bggapp-pod2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bggapp-ing
  labels:
    name: bggapp-ing
spec:
  ingressClassName: nginx
  rules:
  - host: bgg-139.59.216.163.nip.io
    http:
      paths:
      - pathType: Prefix
        path: /v1
        backend:
          service:
            name: bggapp-svc1
            port: 
              number: 80
      - pathType: Prefix
        path: /v2
        backend:
          service:
            name: bggapp-svc2
            port: 
              number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  labels:
    name: data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: do-block-storage

